   0  $accept : %entry% $end

   1  program : master_decl EOF
   2          | program master_decl

   3  master_decl : init_decls
   4              | vdecl
   5              | adecl
   6              | fdecl

   7  init_decls : simpl_typ ID ASSIGN primary_expr SEMI
   8             | array_typ ID ASSIGN array_expr SEMI
   9             | NOTE ID ASSIGN note_expr SEMI
  10             | MEASURE ID ASSIGN measure_expr SEMI

  11  vdecl : simpl_typ ID SEMI
  12        | NOTE ID SEMI
  13        | MEASURE ID SEMI

  14  adecl : array_typ ID SEMI

  15  fdecl : DEF master_typ ID LPAREN formal_opt RPAREN LBRACE stmt_list RBRACE

  16  formal_opt :
  17             | formal_list

  18  formal_list : typ ID
  19              | formal_list COMMA typ ID

  20  master_typ : typ
  21             | array_typ

  22  typ : simpl_typ
  23      | NOTE
  24      | MEASURE
  25      | NONE
  26      | VOID

  27  simpl_typ : INT
  28            | FLOAT
  29            | CHAR
  30            | STRING
  31            | BOOL

  32  array_typ : simpl_typ LBRACKET RBRACKET
  33            | NOTE LBRACKET RBRACKET
  34            | MEASURE LBRACKET RBRACKET

  35  master_array : array_primary
  36               | array_measure

  37  array_primary : primary_expr
  38                | array_primary COMMA primary_expr

  39  array_measure : measure_expr
  40                | array_measure COMMA measure_expr

  41  array_expr : LBRACKET master_array RBRACKET

  42  stmt_list :
  43            | stmt_list stmt

  44  stmt : primary_expr SEMI
  45       | RETURN expr_opt SEMI
  46       | LBRACE stmt_list RBRACE
  47       | IF LPAREN primary_expr RPAREN stmt
  48       | IF LPAREN primary_expr RPAREN stmt ELSE stmt
  49       | FOR LPAREN expr_opt SEMI primary_expr SEMI expr_opt RPAREN stmt
  50       | WHILE LPAREN primary_expr RPAREN stmt

  51  expr_opt :
  52           | primary_expr

  53  primary_expr : LITERAL
  54               | FLIT
  55               | BLIT
  56               | TLIT
  57               | STRLIT
  58               | ID

  59  note_expr : LPAREN TLIT LITERAL LITERAL RPAREN
  60            | LPAREN TLIT LITERAL FLIT RPAREN

  61  measure_expr : note_expr
  62               | array_expr COMMA note_expr

  63  un_op : NOT
  64        | PLUS PLUS
  65        | MINUS MINUS

  66  un_expr : primary_expr
  67          | MINUS un_expr
  68          | NOT un_expr
  69          | un_expr PLUS PLUS
  70          | un_expr MINUS MINUS

  71  mult_op : TIMES
  72          | DIVIDE
  73          | MOD

  74  mult_expr : un_expr
  75            | mult_expr mult_op un_expr

  76  add_op : PLUS
  77         | MINUS

  78  add_expr : mult_expr
  79           | add_expr add_op mult_expr

  80  rel_op : LT
  81         | GT
  82         | LEQ
  83         | GEQ

  84  rel_expr : add_expr
  85           | rel_expr rel_op add_expr

  86  eq_expr : rel_expr
  87          | eq_expr eq_op rel_expr

  88  eq_op : EQ
  89        | NEQ

  90  eq_expr : rel_expr
  91          | eq_expr eq_op rel_expr

  92  bool_op : AND
  93          | OR

  94  bool_expr : eq_expr
  95            | bool_expr bool_op eq_expr

  96  assign_expr : bool_expr
  97              | ID ASSIGN assign_expr

  98  func_expr : ID LPAREN args_opt RPAREN

  99  built_in_func_expr : DOT ID LPAREN args_opt RPAREN

 100  args_opt :
 101           | args_list

 102  args_list : expr_opt
 103            | args_list COMMA expr_opt

 104  %entry% : '\001' program

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . program  (104)

	NOTE  shift 3
	MEASURE  shift 4
	DEF  shift 5
	CHAR  shift 6
	STRING  shift 7
	INT  shift 8
	BOOL  shift 9
	FLOAT  shift 10
	.  error

	program  goto 11
	master_decl  goto 12
	init_decls  goto 13
	vdecl  goto 14
	adecl  goto 15
	fdecl  goto 16
	simpl_typ  goto 17
	array_typ  goto 18


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	init_decls : NOTE . ID ASSIGN note_expr SEMI  (9)
	vdecl : NOTE . ID SEMI  (12)
	array_typ : NOTE . LBRACKET RBRACKET  (33)

	LBRACKET  shift 19
	ID  shift 20
	.  error


state 4
	init_decls : MEASURE . ID ASSIGN measure_expr SEMI  (10)
	vdecl : MEASURE . ID SEMI  (13)
	array_typ : MEASURE . LBRACKET RBRACKET  (34)

	LBRACKET  shift 21
	ID  shift 22
	.  error


state 5
	fdecl : DEF . master_typ ID LPAREN formal_opt RPAREN LBRACE stmt_list RBRACE  (15)

	NOTE  shift 23
	MEASURE  shift 24
	NONE  shift 25
	CHAR  shift 6
	STRING  shift 7
	INT  shift 8
	BOOL  shift 9
	FLOAT  shift 10
	VOID  shift 26
	.  error

	simpl_typ  goto 27
	array_typ  goto 28
	master_typ  goto 29
	typ  goto 30


state 6
	simpl_typ : CHAR .  (29)

	.  reduce 29


state 7
	simpl_typ : STRING .  (30)

	.  reduce 30


state 8
	simpl_typ : INT .  (27)

	.  reduce 27


state 9
	simpl_typ : BOOL .  (31)

	.  reduce 31


state 10
	simpl_typ : FLOAT .  (28)

	.  reduce 28


state 11
	program : program . master_decl  (2)
	%entry% : '\001' program .  (104)

	NOTE  shift 3
	MEASURE  shift 4
	DEF  shift 5
	CHAR  shift 6
	STRING  shift 7
	INT  shift 8
	BOOL  shift 9
	FLOAT  shift 10
	$end  reduce 104

	master_decl  goto 31
	init_decls  goto 13
	vdecl  goto 14
	adecl  goto 15
	fdecl  goto 16
	simpl_typ  goto 17
	array_typ  goto 18


state 12
	program : master_decl . EOF  (1)

	EOF  shift 32
	.  error


state 13
	master_decl : init_decls .  (3)

	.  reduce 3


state 14
	master_decl : vdecl .  (4)

	.  reduce 4


state 15
	master_decl : adecl .  (5)

	.  reduce 5


state 16
	master_decl : fdecl .  (6)

	.  reduce 6


state 17
	init_decls : simpl_typ . ID ASSIGN primary_expr SEMI  (7)
	vdecl : simpl_typ . ID SEMI  (11)
	array_typ : simpl_typ . LBRACKET RBRACKET  (32)

	LBRACKET  shift 33
	ID  shift 34
	.  error


state 18
	init_decls : array_typ . ID ASSIGN array_expr SEMI  (8)
	adecl : array_typ . ID SEMI  (14)

	ID  shift 35
	.  error


state 19
	array_typ : NOTE LBRACKET . RBRACKET  (33)

	RBRACKET  shift 36
	.  error


state 20
	init_decls : NOTE ID . ASSIGN note_expr SEMI  (9)
	vdecl : NOTE ID . SEMI  (12)

	SEMI  shift 37
	ASSIGN  shift 38
	.  error


state 21
	array_typ : MEASURE LBRACKET . RBRACKET  (34)

	RBRACKET  shift 39
	.  error


state 22
	init_decls : MEASURE ID . ASSIGN measure_expr SEMI  (10)
	vdecl : MEASURE ID . SEMI  (13)

	SEMI  shift 40
	ASSIGN  shift 41
	.  error


state 23
	typ : NOTE .  (23)
	array_typ : NOTE . LBRACKET RBRACKET  (33)

	LBRACKET  shift 19
	ID  reduce 23


state 24
	typ : MEASURE .  (24)
	array_typ : MEASURE . LBRACKET RBRACKET  (34)

	LBRACKET  shift 21
	ID  reduce 24


state 25
	typ : NONE .  (25)

	.  reduce 25


state 26
	typ : VOID .  (26)

	.  reduce 26


state 27
	typ : simpl_typ .  (22)
	array_typ : simpl_typ . LBRACKET RBRACKET  (32)

	LBRACKET  shift 33
	ID  reduce 22


state 28
	master_typ : array_typ .  (21)

	.  reduce 21


state 29
	fdecl : DEF master_typ . ID LPAREN formal_opt RPAREN LBRACE stmt_list RBRACE  (15)

	ID  shift 42
	.  error


state 30
	master_typ : typ .  (20)

	.  reduce 20


state 31
	program : program master_decl .  (2)

	.  reduce 2


state 32
	program : master_decl EOF .  (1)

	.  reduce 1


state 33
	array_typ : simpl_typ LBRACKET . RBRACKET  (32)

	RBRACKET  shift 43
	.  error


state 34
	init_decls : simpl_typ ID . ASSIGN primary_expr SEMI  (7)
	vdecl : simpl_typ ID . SEMI  (11)

	SEMI  shift 44
	ASSIGN  shift 45
	.  error


state 35
	init_decls : array_typ ID . ASSIGN array_expr SEMI  (8)
	adecl : array_typ ID . SEMI  (14)

	SEMI  shift 46
	ASSIGN  shift 47
	.  error


state 36
	array_typ : NOTE LBRACKET RBRACKET .  (33)

	.  reduce 33


state 37
	vdecl : NOTE ID SEMI .  (12)

	.  reduce 12


state 38
	init_decls : NOTE ID ASSIGN . note_expr SEMI  (9)

	LPAREN  shift 48
	.  error

	note_expr  goto 49


state 39
	array_typ : MEASURE LBRACKET RBRACKET .  (34)

	.  reduce 34


state 40
	vdecl : MEASURE ID SEMI .  (13)

	.  reduce 13


state 41
	init_decls : MEASURE ID ASSIGN . measure_expr SEMI  (10)

	LPAREN  shift 48
	LBRACKET  shift 50
	.  error

	array_expr  goto 51
	note_expr  goto 52
	measure_expr  goto 53


state 42
	fdecl : DEF master_typ ID . LPAREN formal_opt RPAREN LBRACE stmt_list RBRACE  (15)

	LPAREN  shift 54
	.  error


state 43
	array_typ : simpl_typ LBRACKET RBRACKET .  (32)

	.  reduce 32


state 44
	vdecl : simpl_typ ID SEMI .  (11)

	.  reduce 11


state 45
	init_decls : simpl_typ ID ASSIGN . primary_expr SEMI  (7)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 61


state 46
	adecl : array_typ ID SEMI .  (14)

	.  reduce 14


state 47
	init_decls : array_typ ID ASSIGN . array_expr SEMI  (8)

	LBRACKET  shift 50
	.  error

	array_expr  goto 62


state 48
	note_expr : LPAREN . TLIT LITERAL LITERAL RPAREN  (59)
	note_expr : LPAREN . TLIT LITERAL FLIT RPAREN  (60)

	TLIT  shift 63
	.  error


state 49
	init_decls : NOTE ID ASSIGN note_expr . SEMI  (9)

	SEMI  shift 64
	.  error


state 50
	array_expr : LBRACKET . master_array RBRACKET  (41)

	LPAREN  shift 48
	LBRACKET  shift 50
	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 65
	array_expr  goto 51
	note_expr  goto 52
	measure_expr  goto 66
	master_array  goto 67
	array_primary  goto 68
	array_measure  goto 69


state 51
	measure_expr : array_expr . COMMA note_expr  (62)

	COMMA  shift 70
	.  error


state 52
	measure_expr : note_expr .  (61)

	.  reduce 61


state 53
	init_decls : MEASURE ID ASSIGN measure_expr . SEMI  (10)

	SEMI  shift 71
	.  error


state 54
	fdecl : DEF master_typ ID LPAREN . formal_opt RPAREN LBRACE stmt_list RBRACE  (15)
	formal_opt : .  (16)

	NOTE  shift 72
	MEASURE  shift 73
	NONE  shift 25
	CHAR  shift 6
	STRING  shift 7
	INT  shift 8
	BOOL  shift 9
	FLOAT  shift 10
	VOID  shift 26
	RPAREN  reduce 16

	simpl_typ  goto 74
	formal_opt  goto 75
	formal_list  goto 76
	typ  goto 77


state 55
	primary_expr : LITERAL .  (53)

	.  reduce 53


state 56
	primary_expr : BLIT .  (55)

	.  reduce 55


state 57
	primary_expr : ID .  (58)

	.  reduce 58


state 58
	primary_expr : FLIT .  (54)

	.  reduce 54


state 59
	primary_expr : TLIT .  (56)

	.  reduce 56


state 60
	primary_expr : STRLIT .  (57)

	.  reduce 57


state 61
	init_decls : simpl_typ ID ASSIGN primary_expr . SEMI  (7)

	SEMI  shift 78
	.  error


state 62
	init_decls : array_typ ID ASSIGN array_expr . SEMI  (8)

	SEMI  shift 79
	.  error


state 63
	note_expr : LPAREN TLIT . LITERAL LITERAL RPAREN  (59)
	note_expr : LPAREN TLIT . LITERAL FLIT RPAREN  (60)

	LITERAL  shift 80
	.  error


state 64
	init_decls : NOTE ID ASSIGN note_expr SEMI .  (9)

	.  reduce 9


state 65
	array_primary : primary_expr .  (37)

	.  reduce 37


state 66
	array_measure : measure_expr .  (39)

	.  reduce 39


state 67
	array_expr : LBRACKET master_array . RBRACKET  (41)

	RBRACKET  shift 81
	.  error


state 68
	master_array : array_primary .  (35)
	array_primary : array_primary . COMMA primary_expr  (38)

	COMMA  shift 82
	RBRACKET  reduce 35


state 69
	master_array : array_measure .  (36)
	array_measure : array_measure . COMMA measure_expr  (40)

	COMMA  shift 83
	RBRACKET  reduce 36


state 70
	measure_expr : array_expr COMMA . note_expr  (62)

	LPAREN  shift 48
	.  error

	note_expr  goto 84


state 71
	init_decls : MEASURE ID ASSIGN measure_expr SEMI .  (10)

	.  reduce 10


state 72
	typ : NOTE .  (23)

	.  reduce 23


state 73
	typ : MEASURE .  (24)

	.  reduce 24


state 74
	typ : simpl_typ .  (22)

	.  reduce 22


state 75
	fdecl : DEF master_typ ID LPAREN formal_opt . RPAREN LBRACE stmt_list RBRACE  (15)

	RPAREN  shift 85
	.  error


state 76
	formal_opt : formal_list .  (17)
	formal_list : formal_list . COMMA typ ID  (19)

	COMMA  shift 86
	RPAREN  reduce 17


state 77
	formal_list : typ . ID  (18)

	ID  shift 87
	.  error


state 78
	init_decls : simpl_typ ID ASSIGN primary_expr SEMI .  (7)

	.  reduce 7


state 79
	init_decls : array_typ ID ASSIGN array_expr SEMI .  (8)

	.  reduce 8


state 80
	note_expr : LPAREN TLIT LITERAL . LITERAL RPAREN  (59)
	note_expr : LPAREN TLIT LITERAL . FLIT RPAREN  (60)

	LITERAL  shift 88
	FLIT  shift 89
	.  error


state 81
	array_expr : LBRACKET master_array RBRACKET .  (41)

	.  reduce 41


state 82
	array_primary : array_primary COMMA . primary_expr  (38)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 90


state 83
	array_measure : array_measure COMMA . measure_expr  (40)

	LPAREN  shift 48
	LBRACKET  shift 50
	.  error

	array_expr  goto 51
	note_expr  goto 52
	measure_expr  goto 91


state 84
	measure_expr : array_expr COMMA note_expr .  (62)

	.  reduce 62


state 85
	fdecl : DEF master_typ ID LPAREN formal_opt RPAREN . LBRACE stmt_list RBRACE  (15)

	LBRACE  shift 92
	.  error


state 86
	formal_list : formal_list COMMA . typ ID  (19)

	NOTE  shift 72
	MEASURE  shift 73
	NONE  shift 25
	CHAR  shift 6
	STRING  shift 7
	INT  shift 8
	BOOL  shift 9
	FLOAT  shift 10
	VOID  shift 26
	.  error

	simpl_typ  goto 74
	typ  goto 93


state 87
	formal_list : typ ID .  (18)

	.  reduce 18


state 88
	note_expr : LPAREN TLIT LITERAL LITERAL . RPAREN  (59)

	RPAREN  shift 94
	.  error


state 89
	note_expr : LPAREN TLIT LITERAL FLIT . RPAREN  (60)

	RPAREN  shift 95
	.  error


state 90
	array_primary : array_primary COMMA primary_expr .  (38)

	.  reduce 38


state 91
	array_measure : array_measure COMMA measure_expr .  (40)

	.  reduce 40


state 92
	fdecl : DEF master_typ ID LPAREN formal_opt RPAREN LBRACE . stmt_list RBRACE  (15)
	stmt_list : .  (42)

	.  reduce 42

	stmt_list  goto 96


state 93
	formal_list : formal_list COMMA typ . ID  (19)

	ID  shift 97
	.  error


state 94
	note_expr : LPAREN TLIT LITERAL LITERAL RPAREN .  (59)

	.  reduce 59


state 95
	note_expr : LPAREN TLIT LITERAL FLIT RPAREN .  (60)

	.  reduce 60


state 96
	fdecl : DEF master_typ ID LPAREN formal_opt RPAREN LBRACE stmt_list . RBRACE  (15)
	stmt_list : stmt_list . stmt  (43)

	LBRACE  shift 98
	RBRACE  shift 99
	RETURN  shift 100
	IF  shift 101
	FOR  shift 102
	WHILE  shift 103
	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 104
	stmt  goto 105


state 97
	formal_list : formal_list COMMA typ ID .  (19)

	.  reduce 19


state 98
	stmt : LBRACE . stmt_list RBRACE  (46)
	stmt_list : .  (42)

	.  reduce 42

	stmt_list  goto 106


state 99
	fdecl : DEF master_typ ID LPAREN formal_opt RPAREN LBRACE stmt_list RBRACE .  (15)

	.  reduce 15


state 100
	stmt : RETURN . expr_opt SEMI  (45)
	expr_opt : .  (51)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	SEMI  reduce 51

	primary_expr  goto 107
	expr_opt  goto 108


state 101
	stmt : IF . LPAREN primary_expr RPAREN stmt  (47)
	stmt : IF . LPAREN primary_expr RPAREN stmt ELSE stmt  (48)

	LPAREN  shift 109
	.  error


state 102
	stmt : FOR . LPAREN expr_opt SEMI primary_expr SEMI expr_opt RPAREN stmt  (49)

	LPAREN  shift 110
	.  error


state 103
	stmt : WHILE . LPAREN primary_expr RPAREN stmt  (50)

	LPAREN  shift 111
	.  error


state 104
	stmt : primary_expr . SEMI  (44)

	SEMI  shift 112
	.  error


state 105
	stmt_list : stmt_list stmt .  (43)

	.  reduce 43


state 106
	stmt_list : stmt_list . stmt  (43)
	stmt : LBRACE stmt_list . RBRACE  (46)

	LBRACE  shift 98
	RBRACE  shift 113
	RETURN  shift 100
	IF  shift 101
	FOR  shift 102
	WHILE  shift 103
	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 104
	stmt  goto 105


state 107
	expr_opt : primary_expr .  (52)

	.  reduce 52


state 108
	stmt : RETURN expr_opt . SEMI  (45)

	SEMI  shift 114
	.  error


state 109
	stmt : IF LPAREN . primary_expr RPAREN stmt  (47)
	stmt : IF LPAREN . primary_expr RPAREN stmt ELSE stmt  (48)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 115


state 110
	stmt : FOR LPAREN . expr_opt SEMI primary_expr SEMI expr_opt RPAREN stmt  (49)
	expr_opt : .  (51)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	SEMI  reduce 51

	primary_expr  goto 107
	expr_opt  goto 116


state 111
	stmt : WHILE LPAREN . primary_expr RPAREN stmt  (50)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 117


state 112
	stmt : primary_expr SEMI .  (44)

	.  reduce 44


state 113
	stmt : LBRACE stmt_list RBRACE .  (46)

	.  reduce 46


state 114
	stmt : RETURN expr_opt SEMI .  (45)

	.  reduce 45


state 115
	stmt : IF LPAREN primary_expr . RPAREN stmt  (47)
	stmt : IF LPAREN primary_expr . RPAREN stmt ELSE stmt  (48)

	RPAREN  shift 118
	.  error


state 116
	stmt : FOR LPAREN expr_opt . SEMI primary_expr SEMI expr_opt RPAREN stmt  (49)

	SEMI  shift 119
	.  error


state 117
	stmt : WHILE LPAREN primary_expr . RPAREN stmt  (50)

	RPAREN  shift 120
	.  error


state 118
	stmt : IF LPAREN primary_expr RPAREN . stmt  (47)
	stmt : IF LPAREN primary_expr RPAREN . stmt ELSE stmt  (48)

	LBRACE  shift 98
	RETURN  shift 100
	IF  shift 101
	FOR  shift 102
	WHILE  shift 103
	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 104
	stmt  goto 121


state 119
	stmt : FOR LPAREN expr_opt SEMI . primary_expr SEMI expr_opt RPAREN stmt  (49)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 122


state 120
	stmt : WHILE LPAREN primary_expr RPAREN . stmt  (50)

	LBRACE  shift 98
	RETURN  shift 100
	IF  shift 101
	FOR  shift 102
	WHILE  shift 103
	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 104
	stmt  goto 123


state 121
	stmt : IF LPAREN primary_expr RPAREN stmt .  (47)
	stmt : IF LPAREN primary_expr RPAREN stmt . ELSE stmt  (48)

	ELSE  shift 124
	LBRACE  reduce 47
	RBRACE  reduce 47
	RETURN  reduce 47
	IF  reduce 47
	FOR  reduce 47
	WHILE  reduce 47
	LITERAL  reduce 47
	BLIT  reduce 47
	ID  reduce 47
	FLIT  reduce 47
	TLIT  reduce 47
	STRLIT  reduce 47


state 122
	stmt : FOR LPAREN expr_opt SEMI primary_expr . SEMI expr_opt RPAREN stmt  (49)

	SEMI  shift 125
	.  error


state 123
	stmt : WHILE LPAREN primary_expr RPAREN stmt .  (50)

	.  reduce 50


state 124
	stmt : IF LPAREN primary_expr RPAREN stmt ELSE . stmt  (48)

	LBRACE  shift 98
	RETURN  shift 100
	IF  shift 101
	FOR  shift 102
	WHILE  shift 103
	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 104
	stmt  goto 126


state 125
	stmt : FOR LPAREN expr_opt SEMI primary_expr SEMI . expr_opt RPAREN stmt  (49)
	expr_opt : .  (51)

	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	RPAREN  reduce 51

	primary_expr  goto 107
	expr_opt  goto 127


state 126
	stmt : IF LPAREN primary_expr RPAREN stmt ELSE stmt .  (48)

	.  reduce 48


state 127
	stmt : FOR LPAREN expr_opt SEMI primary_expr SEMI expr_opt . RPAREN stmt  (49)

	RPAREN  shift 128
	.  error


state 128
	stmt : FOR LPAREN expr_opt SEMI primary_expr SEMI expr_opt RPAREN . stmt  (49)

	LBRACE  shift 98
	RETURN  shift 100
	IF  shift 101
	FOR  shift 102
	WHILE  shift 103
	LITERAL  shift 55
	BLIT  shift 56
	ID  shift 57
	FLIT  shift 58
	TLIT  shift 59
	STRLIT  shift 60
	.  error

	primary_expr  goto 104
	stmt  goto 129


state 129
	stmt : FOR LPAREN expr_opt SEMI primary_expr SEMI expr_opt RPAREN stmt .  (49)

	.  reduce 49


Rules never reduced:
	un_op : NOT  (63)
	un_op : PLUS PLUS  (64)
	un_op : MINUS MINUS  (65)
	un_expr : primary_expr  (66)
	un_expr : MINUS un_expr  (67)
	un_expr : NOT un_expr  (68)
	un_expr : un_expr PLUS PLUS  (69)
	un_expr : un_expr MINUS MINUS  (70)
	mult_op : TIMES  (71)
	mult_op : DIVIDE  (72)
	mult_op : MOD  (73)
	mult_expr : un_expr  (74)
	mult_expr : mult_expr mult_op un_expr  (75)
	add_op : PLUS  (76)
	add_op : MINUS  (77)
	add_expr : mult_expr  (78)
	add_expr : add_expr add_op mult_expr  (79)
	rel_op : LT  (80)
	rel_op : GT  (81)
	rel_op : LEQ  (82)
	rel_op : GEQ  (83)
	rel_expr : add_expr  (84)
	rel_expr : rel_expr rel_op add_expr  (85)
	eq_expr : rel_expr  (86)
	eq_expr : eq_expr eq_op rel_expr  (87)
	eq_op : EQ  (88)
	eq_op : NEQ  (89)
	eq_expr : rel_expr  (90)
	eq_expr : eq_expr eq_op rel_expr  (91)
	bool_op : AND  (92)
	bool_op : OR  (93)
	bool_expr : eq_expr  (94)
	bool_expr : bool_expr bool_op eq_expr  (95)
	assign_expr : bool_expr  (96)
	assign_expr : ID ASSIGN assign_expr  (97)
	func_expr : ID LPAREN args_opt RPAREN  (98)
	built_in_func_expr : DOT ID LPAREN args_opt RPAREN  (99)
	args_opt :  (100)
	args_opt : args_list  (101)
	args_list : expr_opt  (102)
	args_list : args_list COMMA expr_opt  (103)


57 terminals, 41 nonterminals
105 grammar rules, 130 states
